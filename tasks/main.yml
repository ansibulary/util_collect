---
# Collect a resource from a URL and validate integrity with signature and/or /digest
#
# params:
#
#   package: {
#     name:      required,
#     url:       required,
#     sigfile: 	 optional,
#     checksum:  optional,
#     algorithm: optional with checksum, defaults to sha256
#   }

- name: Local collection directory exists
  file:
    state: directory
    dest: "{{ ops.repo_dir }}/collected/{{ item }}"
    recurse: true
  with_items:
    - "{{ package.name }}"

- name: Package metadata loaded
  include_vars: "{{ item }}"
  with_fileglob: "{{ ops.repo_dir }}/collected/{{ package.name }}/metadata.yml"

- name: Package collected with digest
  get_url:
    url: "{{ package.url }}"
    dest: "{{ ops.repo_dir }}/collected/{{ package.name }}/{{ package.url|basename }}"
    checksum: "{{ package.algorithm|default('sha256') + ':' + package.checksum|default(collected[package.url|basename].sha256sum) }}"
  register: collect_with_checksum
  when: package.checksum is defined or (collected|default([]))[package.url|basename] is defined

- name: Package collected with signature
  get_url:
    url: "{{ pkg_url }}"
    dest: "{{ ops.repo_dir }}/collected/{{ package.name }}"
  register: collect_with_signature
  loop_control:
    loop_var: pkg_url
  with_items:
    - "{{ package.sigfile|default(omit) }}"
    - "{{ collect_with_checksum is skipped|ternary(package.url, []) }}"
    
- name: Ops keyring directory exists
  delegate_to: localhost
  file:
    state: directory
    dest: "{{ ops.key_dir }}"
    recurse: true

- name: Package signature verified
  delegate_to: localhost
  shell: gpg --verify {{ collect_trusted_keys_only|ternary('', '--auto-key-retrieve') }} --no-default-keyring --keyring {{ collect_keyring }} {{ ops.repo_dir }}/collected/{{ package.name }}/{{ package.sigfile|basename }} 2>&1 |grep 'NO_PUBKEY' |awk '{print $NF}'
  changed_when: false
  register: collect_signature_verified
  when: package.sigfile is defined and collect_with_signature is changed

- name: Package digest saved
  stat:
    path: "{{ ops.repo_dir }}/collected/{{ package.name }}/{{ package.url|basename }}"
    get_checksum: true
    checksum_algorithm: sha256
  register: collect_stat
  when: collect_signature_verified is not skipped

- name: Package metadata saved
  copy:
    dest: "{{ ops.repo_dir }}/collected/{{ package.name }}/metadata.yml"
    content: "collected:\n  {{ package.url|basename }}:\n    sha256sum{{':'}} {{ collect_stat.stat.checksum }}\n"
  when: not collect_stat is skipped
